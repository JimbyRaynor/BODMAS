global.ONE = [
    [1,6], [2,1], [2,6], [3,0], [3,1], [3,2], [3,3], [3,4], [3,5], [3,6],
    [4,0], [4,1], [4,2], [4,3], [4,4], [4,5], [4,6], [5,6], [6,6]
];

global.ZERO = [
    [0,1],[0,2],[0,3],[0,4],[0,5],[1,0],[1,1],[1,2],[1,3],[1,4],[1,5],[1,6],
    [2,0],[2,3],[2,6],[3,0],[3,3],[3,6],[4,0],[4,2],[4,6],[5,0],[5,1],[5,2],
    [5,3],[5,4],[5,5],[5,6],[6,1],[6,2],[6,3],[6,4],[6,5]
];

global.TWO = [
    [0,1],[1,0],[1,1],[1,2],[1,6],[2,0],[2,2],[2,5],[2,6],[3,0],[3,4],[3,5],
    [3,6],[4,0],[4,4],[4,6],[5,0],[5,1],[5,2],[5,3],[5,6],[6,1],[6,2],[6,3],
    [6,5],[6,6]
];

global.THREE = [
    [0,1],[0,5],[1,0],[1,1],[1,5],[1,6],[2,0],[2,3],[2,6],[3,0],[3,3],[3,6],
    [4,0],[4,3],[4,6],[5,0],[5,1],[5,2],[5,3],[5,4],[5,5],[5,6],[6,1],[6,2],
    [6,4],[6,5]
];

global.FOUR = [
    [0,3],[0,4],[1,2],[1,3],[1,4],[2,1],[2,2],[2,4],[3,0],[3,1],[3,4],[4,0],
    [4,1],[4,2],[4,3],[4,4],[4,5],[4,6],[5,0],[5,1],[5,2],[5,3],[5,4],[5,5],
    [5,6],[6,4]
];

global.FIVE = [
    [0,0],[0,1],[0,2],[0,3],[0,5],[1,0],[1,1],[1,2],[1,3],[1,5],[1,6],[2,0],
    [2,3],[2,6],[3,0],[3,3],[3,6],[4,0],[4,3],[4,6],[5,0],[5,3],[5,4],[5,5],
    [5,6],[6,0],[6,1],[6,4],[6,5]
];

global.SIX = [
    [0,1],[0,2],[0,3],[0,4],[0,5],[1,0],[1,1],[1,2],[1,3],[1,4],[1,5],[1,6],
    [2,0],[2,3],[2,6],[3,0],[3,3],[3,6],[4,0],[4,3],[4,6],[5,0],[5,1],[5,3],
    [5,4],[5,5],[5,6],[6,1],[6,4],[6,5]
];

global.SEVEN = [
    [0,0],[0,1],[1,0],[1,1],[2,0],[2,5],[2,6],[3,0],[3,3],[3,4],[3,5],[3,6],
    [4,0],[4,1],[4,2],[4,3],[4,4],[5,0],[5,1],[5,2],[6,0],[6,1]
];

global.EIGHT = [
    [0,1],[0,2],[0,4],[0,5],[1,0],[1,1],[1,2],[1,3],[1,4],[1,5],[1,6],[2,0],
    [2,3],[2,6],[3,0],[3,3],[3,6],[4,0],[4,3],[4,6],[5,0],[5,1],[5,2],[5,3],
    [5,4],[5,5],[5,6],[6,1],[6,2],[6,4],[6,5]
];

global.NINE = [
    [0,1],[0,2],[0,5],[1,0],[1,1],[1,2],[1,3],[1,5],[1,6],[2,0],[2,3],[2,6],
    [3,0],[3,3],[3,6],[4,0],[4,3],[4,5],[4,6],[5,0],[5,1],[5,2],[5,3],[5,4],
    [5,5],[6,1],[6,2],[6,3],[6,4]
];

global.PLUS = [
    [1,3],[2,3],[3,1],[3,2],[3,3],[3,4],[3,5],[4,3],[5,3]
];

global.TIMES = [
    [1,1],[1,5],[2,2],[2,4],[3,3],[4,2],[4,4],[5,1],[5,5]
];

global.LEFTBRACKET = [
    [2,2],[2,3],[2,4],[3,1],[3,5],[4,0],[4,6]
];

global.RIGHTBRACKET = [
    [2,0],[2,6],[3,1],[3,5],[4,2],[4,3],[4,4]
];

global.EQUALS = [
    [1,2],[1,4],[2,2],[2,4],[3,2],[3,4],[4,2],[4,4],[5,2],[5,4],[6,2],[6,4]
];

global.charA = [
    [1,0],[1,1],[1,2],[1,3],[1,4],[1,5],[1,6],
    [2,0],[2,1],[2,2],[2,3],[2,4],[2,5],[2,6],
    [3,0],[3,3],[4,0],[4,3],
    [5,0],[5,1],[5,2],[5,3],[5,4],[5,5],[5,6],
    [6,0],[6,1],[6,2],[6,3],[6,4],[6,5],[6,6]
];

global.charB = [
    [1,0],[1,1],[1,2],[1,3],[1,4],[1,5],[1,6],
    [2,0],[2,1],[2,2],[2,3],[2,4],[2,5],[2,6],
    [3,0],[3,3],[3,6],[4,0],[4,3],[4,6],
    [5,0],[5,1],[5,2],[5,3],[5,4],[5,5],[5,6],
    [6,1],[6,2],[6,4],[6,5]
];

global.charC = [
    [1,0],[1,1],[1,2],[1,3],[1,4],[1,5],[1,6],
    [2,0],[2,1],[2,2],[2,3],[2,4],[2,5],[2,6],
    [3,0],[3,6],[4,0],[4,6],
    [5,0],[5,1],[5,5],[5,6],
    [6,0],[6,1],[6,5],[6,6]
];

global.charD = [
    [1,0],[1,1],[1,2],[1,3],[1,4],[1,5],[1,6],
    [2,0],[2,1],[2,2],[2,3],[2,4],[2,5],[2,6],
    [3,0],[3,6],[4,0],[4,1],[4,6],
    [5,1],[5,2],[5,3],[5,4],[5,5],[5,6],
    [6,2],[6,3],[6,4],[6,5]
];

global.charE = [
    [1,0],[1,1],[1,2],[1,3],[1,4],[1,5],[1,6],
    [2,0],[2,1],[2,2],[2,3],[2,4],[2,5],[2,6],
    [3,0],[3,3],[3,6],[4,0],[4,3],[4,6],
    [5,0],[5,6],[6,0],[6,1],[6,5],[6,6]
];

global.charF = [
    [1,0],[1,1],[1,2],[1,3],[1,4],[1,5],[1,6],
    [2,0],[2,1],[2,2],[2,3],[2,4],[2,5],[2,6],
    [3,0],[3,3],[4,0],[4,3],
    [5,0],[6,0]
];

global.charG = [
    [1,0],[1,1],[1,2],[1,3],[1,4],[1,5],[1,6],
    [2,0],[2,1],[2,2],[2,3],[2,4],[2,5],[2,6],
    [3,0],[3,6],[4,0],[4,3],[4,6],
    [5,0],[5,1],[5,3],[5,4],[5,5],[5,6],
    [6,0],[6,1],[6,3],[6,4],[6,5],[6,6]
];

global.charH = [
    [1,0],[1,1],[1,2],[1,3],[1,4],[1,5],[1,6],
    [2,0],[2,1],[2,2],[2,3],[2,4],[2,5],[2,6],
    [3,3],[4,3],
    [5,0],[5,1],[5,2],[5,3],[5,4],[5,5],[5,6],
    [6,0],[6,1],[6,2],[6,3],[6,4],[6,5],[6,6]
];

global.charI = [
    [2,0],[2,6],
    [3,0],[3,1],[3,2],[3,3],[3,4],[3,5],[3,6],
    [4,0],[4,1],[4,2],[4,3],[4,4],[4,5],[4,6],
    [5,0],[5,6]
];

global.charJ = [
    [1,5],[1,6],[2,5],[2,6],
    [3,0],[3,6],
    [4,0],[4,1],[4,2],[4,3],[4,4],[4,5],[4,6],
    [5,0],[5,1],[5,2],[5,3],[5,4],[5,5],[5,6],
    [6,0]
];

global.charK = [
    [1,0],[1,1],[1,2],[1,3],[1,4],[1,5],[1,6],
    [2,0],[2,1],[2,2],[2,3],[2,4],[2,5],[2,6],
    [3,2],[3,3],[3,4],
    [4,1],[4,2],[4,4],[4,5],
    [5,0],[5,1],[5,5],[5,6],
    [6,0],[6,6]
];

global.charL = [
    [1,0],[1,1],[1,2],[1,3],[1,4],[1,5],[1,6],
    [2,0],[2,1],[2,2],[2,3],[2,4],[2,5],[2,6],
    [3,6],[4,6],[5,6],[6,5],[6,6]
];

global.charM = [
    [0,0],[0,1],[0,2],[0,3],[0,4],[0,5],[0,6],
    [1,0],[1,1],[1,2],[1,3],[1,4],[1,5],[1,6],
    [2,1],[2,2],[3,2],[3,3],[4,1],[4,2],
    [5,0],[5,1],[5,2],[5,3],[5,4],[5,5],[5,6],
    [6,0],[6,1],[6,2],[6,3],[6,4],[6,5],[6,6]
];

global.charN = [
    [1,0],[1,1],[1,2],[1,3],[1,4],[1,5],[1,6],
    [2,0],[2,1],[2,2],[2,3],[2,4],[2,5],[2,6],
    [3,2],[3,3],[4,3],[4,4],
    [5,0],[5,1],[5,2],[5,3],[5,4],[5,5],[5,6],
    [6,0],[6,1],[6,2],[6,3],[6,4],[6,5],[6,6]
];

global.charO = [
    [1,0],[1,1],[1,2],[1,3],[1,4],[1,5],[1,6],
    [2,0],[2,1],[2,2],[2,3],[2,4],[2,5],[2,6],
    [3,0],[3,6],[4,0],[4,6],
    [5,0],[5,1],[5,2],[5,3],[5,4],[5,5],[5,6],
    [6,0],[6,1],[6,2],[6,3],[6,4],[6,5],[6,6]
];

global.charP = [
    [1,0],[1,1],[1,2],[1,3],[1,4],[1,5],[1,6],
    [2,0],[2,1],[2,2],[2,3],[2,4],[2,5],[2,6],
    [3,0],[3,3],[4,0],[4,3],
    [5,0],[5,1],[5,2],[5,3],
    [6,0],[6,1],[6,2],[6,3]
];


global.charR = [
    [1,0],[1,1],[1,2],[1,3],[1,4],[1,5],[1,6],
    [2,0],[2,1],[2,2],[2,3],[2,4],[2,5],[2,6],
    [3,0],[3,3],[3,4],
    [4,0],[4,3],[4,4],[4,5],
    [5,0],[5,1],[5,2],[5,3],[5,5],[5,6],
    [6,1],[6,2],[6,6]
];

global.charS = [
    [1,0],[1,1],[1,2],[1,3],[1,5],[1,6],
    [2,0],[2,1],[2,2],[2,3],[2,5],[2,6],
    [3,0],[3,3],[3,6],
    [4,0],[4,3],[4,6],
    [5,0],[5,1],[5,3],[5,4],[5,5],[5,6],
    [6,0],[6,1],[6,3],[6,4],[6,5],[6,6]
];

global.charT = [
    [1,0],[2,0],
    [3,0],[3,1],[3,2],[3,3],[3,4],[3,5],[3,6],
    [4,0],[4,1],[4,2],[4,3],[4,4],[4,5],[4,6],
    [5,0],[6,0]
];

global.charU = [
    [1,0],[1,1],[1,2],[1,3],[1,4],[1,5],[1,6],
    [2,0],[2,1],[2,2],[2,3],[2,4],[2,5],[2,6],
    [3,6],[4,6],
    [5,0],[5,1],[5,2],[5,3],[5,4],[5,5],[5,6],
    [6,0],[6,1],[6,2],[6,3],[6,4],[6,5],[6,6]
];

global.charV = [
    [0,0],[0,1],[0,2],[0,3],
    [1,0],[1,1],[1,2],[1,3],[1,4],[1,5],
    [2,3],[2,4],[2,5],[2,6],
    [3,5],[3,6],
    [4,3],[4,4],[4,5],[4,6],
    [5,0],[5,1],[5,2],[5,3],[5,4],[5,5],
    [6,0],[6,1],[6,2],[6,3]
];

global.charW = [
    [0,0],[0,1],[0,2],[0,3],[0,4],[0,5],[0,6],
    [1,0],[1,1],[1,2],[1,3],[1,4],[1,5],[1,6],
    [2,4],[2,5],[3,3],[3,4],[4,4],[4,5],
    [5,0],[5,1],[5,2],[5,3],[5,4],[5,5],[5,6],
    [6,0],[6,1],[6,2],[6,3],[6,4],[6,5],[6,6]
];

global.charX = [
    [1,0],[1,1],[1,5],[1,6],
    [2,0],[2,1],[2,2],[2,4],[2,5],[2,6],
    [3,2],[3,3],[3,4],
    [4,2],[4,3],[4,4],
    [5,0],[5,1],[5,2],[5,4],[5,5],[5,6],
    [6,0],[6,1],[6,5],[6,6]
];

global.charY = [
    [1,0],[1,1],
    [2,0],[2,1],[2,2],
    [3,2],[3,3],[3,4],[3,5],[3,6],
    [4,2],[4,3],[4,4],[4,5],[4,6],
    [5,0],[5,1],[5,2],
    [6,0],[6,1]
];

global.charZ = [
    [1,0],[1,1],[1,5],[1,6],
    [2,0],[2,4],[2,5],[2,6],
    [3,0],[3,3],[3,4],[3,6],
    [4,0],[4,2],[4,3],[4,6],
    [5,0],[5,1],[5,2],[5,6],
    [6,0],[6,1],[6,5],[6,6]
];


global.charQ = [
    [1,0],[1,1],[1,2],[1,3],[1,4],[1,5],[1,6],
    [2,0],[2,1],[2,2],[2,3],[2,4],[2,5],[2,6],
    [3,0],[3,6],
    [4,0],[4,5],[4,6],
    [5,0],[5,1],[5,2],[5,3],[5,4],[5,5],[5,6],
    [6,0],[6,1],[6,2],[6,3],[6,4],[6,5],[6,6],
    [6,7],[7,7]
];

function ColourChar(xloc, yloc, coord_array, mycolor,charsize) {
    for (var i = 0; i < array_length(coord_array); i++) {
        var xs = xloc+coord_array[i][0] * charsize;
        var ys = yloc+ coord_array[i][1] * charsize;
        draw_set_color(mycolor);
        draw_rectangle(xs, ys, xs + charsize, ys + charsize, false);
    }
}


function ColourText(xloc, ys, mytext, colour, charwidth,charsize)
{
    var digits = [global.ZERO, global.ONE, global.TWO, global.THREE, global.FOUR, global.FIVE, global.SIX, global.SEVEN, global.EIGHT, global.NINE];
    mytext = string_upper(mytext);
    var AdjustPos = 0;
    var PlusCount = 0;
    
    var charactermap = [global.charA, global.charB, global.charC, global.charD, global.charE, global.charF, global.charG, global.charH, global.charI, global.charJ, global.charK, global.charL,
                        global.charM, global.charN, global.charO, global.charP, global.charQ, global.charR, global.charS, global.charT, global.charU, global.charV, global.charW, global.charX,
                        global.charY, global.charZ];

    for (var i = 0; i < string_length(mytext); i++) {
        var c = string_char_at(mytext, i + 1); // GameMaker strings are 1-indexed

        if (c == "M" || c == "W" || c == "V") {
            AdjustPos += charwidth / 8;
        }
        if (c == "I" || c == "(" || c == ")") {
            AdjustPos -= charwidth / 8;
        }

        if (c != " ") {
            xs = xloc +  i*charwidth + AdjustPos;

            switch (c) {
                case "0": case "1": case "2": case "3": case "4":
                case "5": case "6": case "7": case "8": case "9":
                    ColourChar( xs, ys, digits[real(c)], colour,charsize);
                    break;
                case "%":
                    ColourChar( xs, ys, charPercent, colour,charsize);
                    break;
                case ".":
                    AdjustPos -= 2 * charwidth / 8;
					ColourChar( xs, ys, charDot, colour,charsize);
                    break;
                case ":":
                    AdjustPos -= 2 * charwidth / 8;
					ColourChar( xs, ys, charColon, colour,charsize);
                    break;
                case "+":
                   // var newcolour = colour;
                   // if (multicolour && PlusCount < array_length(plusorder)) {
                  //      newcolour = plusorder[PlusCount];
                   // }
				   ColourChar( xs, ys, PLUS, colour,charsize);
                    PlusCount += 1;
                    break;
                case "*":
                    createCharBlockColour2(canvas, xpos, y, colour, TIMES, LEDpoints, solid, bg);
                    break;
                case "?":
                    createCharBlockColour2(canvas, xpos, y, colour, charQuestionMark, LEDpoints, solid, bg);
                    break;
                case "(":
                    createCharBlockColour2(canvas, xpos, y, colour, LEFTBRACKET, LEDpoints, solid, bg);
                    break;
                case ")":
                    createCharBlockColour2(canvas, xpos, y, colour, RIGHTBRACKET, LEDpoints, solid, bg);
                    break;
                case "=":
                    createCharBlockColour2(canvas, xpos, y, colour, EQUALS, LEDpoints, solid, bg);
                    break;
                default:
                    var index = ord(c) - 65;
                    if (index >= 0 && index < array_length(charactermap)) {
						ColourChar( xs, ys, charactermap[index], colour, charsize);
                    }
                    break;
            }
        }

        if (c == "I" || c == "(" || c == ")") {
            AdjustPos -= charwidth / 8;
        }
    }
}

